name: Solar System Workflow

on:
  workflow_dispatch: 
  push:
    branches: 
      - main
      - 'feature/*'

env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{ vars.MONGO_USERNAME }}
  MONGO_PASSWORD: ${{ secrets.MONGO_PASSWORD }}

jobs:
  unit-testing:
    strategy:
      matrix:
        nodejs_version: [18, 19, ]
        operating_system: [ubuntu-latest, ]
        exclude:
          - nodejs_version: 18
            operating_system: macos-latest
    name: Unit Testing
    runs-on: ${{matrix.operating_system}}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
  
      
      - name: Setup NodeJS Version - ${{matrix.nodejs_version}}
        uses: actions/setup-node@v4.0.2
        with:
          node-version: ${{matrix.nodejs_version}}
        
      - name : Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{ hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install
        
      - name: Unit Testing
        id: nodejs-unit-testing-step
        run: npm test

      - name: Archive Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Mocha-Test-Results-${{matrix.operating_system}}-${{matrix.nodejs_version}}
          path: test-results.xml
  
  code-coverage:
    name: Code Coverage
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
      
      - name: Setup NodeJS Version - 18
        uses: actions/setup-node@v4.0.2
        with:
          node-version: 18
       
      - name : Cache npm dependencies
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{runner.os}}-node-modules-${{ hashFiles('package-lock.json')}}

      - name: Install Dependencies
        run: npm install
        
      - name: Check Code Coverage
        continue-on-error: true
        run: npm run coverage

      - name: Archive Test Results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: Code-Coverage-Results
          path: coverage
          retention-days: 5

  docker:
    name: Containerization
    needs: [unit-testing, code-coverage]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4.1.1
      
      - name: Docker Login
        uses: docker/login-action@v2.2.0
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Docker Build
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          tags: ${{vars.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}

      - name: Docker Image Testing
        run: |
          docker images
          docker run --name solar-system-app -d \
            -p 3000:3000
            -e MONGO_URI=$MONGO_URI \
            -e MONGO_USERNAME=$MONGO_USERNAME \
            -e MONGO_PASSWORD=$MONGO_PASSWORD \
            ${{ env.DOCKERHUB_USERNAME }}/solar-system:${{ github.sha }}

          export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
          echo $IP

          echo "Testing image url using WGET"
          wget -q -O - 127.0.0.1:3000/live | grep live